// Definição dos personagens com seus atributos
const player1 = {
    NOME: "Mario",
    VELOCIDADE: 4,
    MANOBRABILIDADE: 3,
    PODER: 3,
    PONTOS: 0, // Pontuação inicial
};

const player2 = {
    NOME: "Luigi",
    VELOCIDADE: 3,
    MANOBRABILIDADE: 4,
    PODER: 4,
    PONTOS: 0, // Pontuação inicial
};

// Função para simular o lançamento de um dado de 6 faces
async function rollDice(){
    return Math.floor (Math.random() * 6) + 1; // Gera um número aleatório entre 1 e 6
}

// Função para determinar aleatoriamente o tipo de bloco da pista
async function getRandomBlock(){
    let random = Math.random() // Gera um número aleatório entre 0 e 1
    let result

    // Define o tipo de bloco com base no número aleatório
    switch (true) {
        case random < 0.33: // 33% de chance de ser "RETA"
            result = "RETA"
            break;
        case random < 0.66: // 33% de chance de ser "CURVA"
            result = "CURVA";
            break;
        default: // 34% de chance de ser "CONFRONTO"
            result = "CONFRONTO"
    }

    return result
}

// Função para exibir o resultado do lançamento do dado no console
async function logRollResult(characterName, block, diceResult, attribute) {
    console.log(
        `${characterName}  rolou um dado de ${block} ${diceResult} + ${attribute} = ${
            diceResult + attribute
        }`
    );
}

// Função principal que simula a corrida
async function playRaceEngine(character1, character2){
    // Loop de 5 rodadas
    for(let round = 1; round <=5; round++) {
        console.log(` Rodada ${round}`);

        // Sorteia o bloco da rodada
        let block = await getRandomBlock();
        console.log(`Bloco: ${block}`);

        // Lança os dados para cada jogador
        let diceResult1 = await rollDice();
        let diceResult2 = await rollDice();

        // Variáveis para armazenar o resultado do teste de habilidade
        let TotalTestSkill1 = 0;
        let TotalTestSkill2 = 0;

        // Lógica para cada tipo de bloco
        if (block === "RETA") {
            // Teste de velocidade
            TotalTestSkill1 = diceResult1 + character1.VELOCIDADE;
            TotalTestSkill2 = diceResult2 + character2.VELOCIDADE;

            // Exibe o resultado dos lançamentos
            await logRollResult(
                character1.NOME, 
                "velocidade", 
                diceResult1, 
                character1.VELOCIDADE
            );

            await logRollResult(
                character2.NOME, 
                "velocidade", 
                diceResult2, 
                character2.VELOCIDADE
            );
        }

        if (block === "CURVA"){
            // Teste de manobrabilidade
            TotalTestSkill1 = diceResult1 + character1.MANOBRABILIDADE;
            TotalTestSkill2 = diceResult2 + character2.MANOBRABILIDADE;

            // Exibe o resultado dos lançamentos
            await logRollResult(
                character1.NOME, 
                "manobrabilidade", 
                diceResult1, 
                character1.MANOBRABILIDADE
            );

            await logRollResult(
                character2.NOME, 
                "manobrabilidade", 
                diceResult2, 
                character2.MANOBRABILIDADE
            );
        }

        if (block === "CONFRONTO"){
            // Cálculo do poder para o confronto
            let powerResult1 = diceResult1 + character1.PODER;
            let powerResult2 = diceResult2 + character2.PODER;

            console.log(`${character1.NOME} confrontou com ${character2.NOME}!`);

            // Exibe o resultado dos lançamentos de poder
            await logRollResult(
                character1.NOME, 
                "poder", 
                diceResult1, 
                character1.PODER
            );

            await logRollResult(
                character2.NOME, 
                "poder", 
                diceResult2, 
                character2.PODER
            );

            // Lógica do confronto: jogador com maior poder ganha, o perdedor perde ponto
            if (powerResult1 > powerResult2 && character2.PONTOS > 0) {
                console.log(`${character1.NOME} venceu o confronto! e ${character2.NOME} perdeu 1 ponto `);
                character2.PONTOS--;
            }

            if (powerResult2 > powerResult1 && character1.PONTOS > 0) {
                console.log(`${character2.NOME} venceu o confronto! e ${character1.NOME} perdeu 1 ponto `);
                character1.PONTOS--;
            }

            console.log(
                powerResult2 === powerResult1
                    ? "Confronto empatado! Nenhum ponto foi perdido"
                    : ""
            );
        }

        // Verifica quem venceu a rodada
        if(TotalTestSkill1 > TotalTestSkill2){
            console.log(`${character1.NOME} Marcou um ponto`);
            character1.PONTOS++;
        }else if(TotalTestSkill2 > TotalTestSkill1){
            console.log(`${character2.NOME} Marcou um ponto`);
            character2.PONTOS++;
        }
        console.log("_______________________________________________");
    }
}

// Função para declarar o vencedor da corrida
async function declareWinner(character1, character2) {
    consolr.log("Resultado final:");
    console.log(`${character1.NOME}: ${character1.PONTOS} ponto(s)`);
    console.log(`${character2.NOME}: ${character2.PONTOS} ponto(s)`);

    // Determina o vencedor com base na pontuação
    if (character1.PONTOS > character2.PONTOS)
        console.log(`\n${character1.NOME} venceu a corrida! Parabéns! `);
    else if (character2.PONTOS > character1.PONTOS)
        console.log(`\n${character2.NOME} venceu a corrida! Parabéns! `);
    else console.log("A corrida terminou em empate");
}

// Função principal que inicia a corrida
(async function main() {
    console.log(
        ` Corrida entre ${player1.NOME} e ${player2.NOME} começando...\n`
    ); 

    // Chama as funções para executar a corrida
    await playRaceEngine(player1, player2);
    await declareWinner(player1, player2);
})(); // Função auto-invocável